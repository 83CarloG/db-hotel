Group by
Conta gli ospiti raggruppandoli per anno di nascita

SELECT COUNT(id) AS 'Ospiti', DATE_FORMAT(`date_of_birth`, '%Y') AS 'Anno'
FROM `ospiti`
GROUP BY DATE_FORMAT(`date_of_birth`, '%Y');

Somma i prezzi dei pagamenti raggruppandoli per status

SELECT `status`, SUM(price)
FROM `pagamenti`
GROUP BY `status`;

Conta quante volte è stata prenotata ogni stanza

SELECT `stanza_id`, COUNT(stanza_id) AS 'numero prenotazioni'
FROM `prenotazioni`
GROUP BY `stanza_id`;

Fai una analisi per vedere se ci sono ore in cui le prenotazioni sono più frequenti

SELECT DATE_FORMAT(`created_at`, '%H') AS 'Ora', COUNT(DATE_FORMAT(`created_at`, '%H')) AS 'n. prenotazione'
FROM `prenotazioni`
GROUP BY DATE_FORMAT(`created_at`, '%H');

Quante prenotazioni ha fatto l’ospite che ha fatto più prenotazioni?

SELECT `pagante_id` AS 'ID Pagante', COUNT(pagante_id) AS 'Numero prenotazioni'
FROM `pagamenti`
GROUP BY `pagante_id`;

Join
Come si chiamano gli ospiti che hanno fatto più di due prenotazioni?

SELECT ospiti.name, ospiti.lastname, COUNT(prenotazioni_has_ospiti.ospite_id) AS 'totale prenotazioni'
FROM `ospiti`
INNER JOIN `prenotazioni_has_ospiti`
ON ospiti.id = prenotazioni_has_ospiti.ospite_id
GROUP BY ospiti.name
HAVING COUNT(prenotazioni_has_ospiti.ospite_id) > 2;

Stampare tutti gli ospiti per ogni prenotazione

SELECT `prenotazione_id` AS 'numero prenotazione', `name`, `lastname`
FROM `prenotazioni_has_ospiti`
INNER JOIN `ospiti`
ON prenotazioni_has_ospiti.ospite_id = ospiti.id
ORDER BY `ospiti`.`lastname` ASC;

Stampare Nome, Cognome, Prezzo e Pagante per tutte le prenotazioni fatte a Maggio 2018

SELECT pagamenti.prenotazione_id AS 'Numero prenotazione',
`status`,
paganti.name AS 'Nome pagante',
paganti.lastname AS 'Cognome pagante',
`price`,
prenotazioni.updated_at 'Data pagamento',
ospiti.name AS 'Nome Ospite',
ospiti.lastname AS 'Cognome Ospite'
FROM `pagamenti`
INNER JOIN `paganti` ON pagamenti.pagante_id = paganti.id
INNER JOIN `prenotazioni` ON pagamenti.prenotazione_id = prenotazioni.id
INNER JOIN `prenotazioni_has_ospiti` ON prenotazioni.id = prenotazioni_has_ospiti.prenotazione_id
INNER JOIN `ospiti` ON prenotazioni_has_ospiti.ospite_id = ospiti.id
WHERE prenotazioni.updated_at BETWEEN '2018-05-01' AND '2018-05-31'

Fai la somma di tutti i prezzi delle prenotazioni per le stanze del primo piano

SELECT stanze.floor, SUM(pagamenti.price) AS 'somma di tutti i prezzi delle prenotazioni per piano'
FROM `pagamenti`
INNER JOIN `prenotazioni`
ON pagamenti.prenotazione_id = prenotazioni.id
INNER JOIN `stanze`
ON prenotazioni.stanza_id = stanze.id
WHERE stanze.floor = 1
GROUP BY stanze.floor

Prendi i dati di fatturazione per la prenotazione con id=7

SELECT prenotazioni.id, `name`, `lastname`, `address`, `room_number`, `price`
FROM `pagamenti`
INNER JOIN `prenotazioni`
ON pagamenti.prenotazione_id = prenotazioni.id
INNER JOIN `stanze`
ON prenotazioni.stanza_id = stanze.id
INNER JOIN `paganti`
ON pagamenti.pagante_id = paganti.id
WHERE pagamenti.prenotazione_id = 7;

Le stanze sono state tutte prenotate almeno una volta? (Visualizzare le stanze non ancora prenotate)

SELECT stanze.room_number AS 'stanze non ancora prenotate'
FROM `prenotazioni`
RIGHT JOIN `stanze`
ON prenotazioni.stanza_id = stanze.id
WHERE prenotazioni.id IS NULL
